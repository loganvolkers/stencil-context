/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface MyComponent {}
  interface MyComponentChild {}
  interface MyComponentGrandchild {}
  interface StencilConsumer {
    'renderer': any;
  }
  interface StencilProvider {
    'STENCIL_CONTEXT': { [key: string]: any };
  }
}

declare global {


  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLMyComponentChildElement extends Components.MyComponentChild, HTMLStencilElement {}
  var HTMLMyComponentChildElement: {
    prototype: HTMLMyComponentChildElement;
    new (): HTMLMyComponentChildElement;
  };

  interface HTMLMyComponentGrandchildElement extends Components.MyComponentGrandchild, HTMLStencilElement {}
  var HTMLMyComponentGrandchildElement: {
    prototype: HTMLMyComponentGrandchildElement;
    new (): HTMLMyComponentGrandchildElement;
  };

  interface HTMLStencilConsumerElement extends Components.StencilConsumer, HTMLStencilElement {}
  var HTMLStencilConsumerElement: {
    prototype: HTMLStencilConsumerElement;
    new (): HTMLStencilConsumerElement;
  };

  interface HTMLStencilProviderElement extends Components.StencilProvider, HTMLStencilElement {}
  var HTMLStencilProviderElement: {
    prototype: HTMLStencilProviderElement;
    new (): HTMLStencilProviderElement;
  };
  interface HTMLElementTagNameMap {
    'my-component': HTMLMyComponentElement;
    'my-component-child': HTMLMyComponentChildElement;
    'my-component-grandchild': HTMLMyComponentGrandchildElement;
    'stencil-consumer': HTMLStencilConsumerElement;
    'stencil-provider': HTMLStencilProviderElement;
  }
}

declare namespace LocalJSX {
  interface MyComponent {}
  interface MyComponentChild {}
  interface MyComponentGrandchild {}
  interface StencilConsumer {
    'onMountConsumer'?: (event: CustomEvent<any>) => void;
    'renderer'?: any;
  }
  interface StencilProvider {
    'STENCIL_CONTEXT'?: { [key: string]: any };
    'onMountConsumer'?: (event: CustomEvent<any>) => void;
  }

  interface IntrinsicElements {
    'my-component': MyComponent;
    'my-component-child': MyComponentChild;
    'my-component-grandchild': MyComponentGrandchild;
    'stencil-consumer': StencilConsumer;
    'stencil-provider': StencilProvider;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
      'my-component-child': LocalJSX.MyComponentChild & JSXBase.HTMLAttributes<HTMLMyComponentChildElement>;
      'my-component-grandchild': LocalJSX.MyComponentGrandchild & JSXBase.HTMLAttributes<HTMLMyComponentGrandchildElement>;
      'stencil-consumer': LocalJSX.StencilConsumer & JSXBase.HTMLAttributes<HTMLStencilConsumerElement>;
      'stencil-provider': LocalJSX.StencilProvider & JSXBase.HTMLAttributes<HTMLStencilProviderElement>;
    }
  }
}


